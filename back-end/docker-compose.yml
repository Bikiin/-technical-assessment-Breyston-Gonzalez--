services:
    db:
        image: postgres:15
        environment:
            POSTGRES_DB: carsdb
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - "5432:5432"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 5s
            timeout: 3s
            retries: 10

    migrate:
        image: mcr.microsoft.com/dotnet/sdk:9.0
        profiles: ["ci"] 
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=carsdb;Username=postgres;Password=postgres 
        working_dir: /app/CarsApi
        command: sh -c "
                dotnet tool install -g dotnet-ef 
                && export PATH=\"\$PATH:/root/.dotnet/tools\"
                && dotnet ef migrations add InitialCreate --project CarsApi.csproj 
                && dotnet ef database update --project CarsApi.csproj
            "
        depends_on:
            db:
                condition: service_healthy
            api-prod:
                condition: service_started
        volumes:
            - .:/app

    coverage:
        image: mcr.microsoft.com/dotnet/sdk:9.0
        working_dir: /app
        volumes:
            - .:/app
        command: sh -c "dotnet restore && dotnet test CarsApi.Tests"


    api-dev:
        image: mcr.microsoft.com/dotnet/sdk:9.0
        profiles: ["dev"]
        working_dir: /app
        volumes:
            - .:/app:cached
        environment:
            - DOTNET_USE_POLLING_FILE_WATCHER=1
            - ASPNETCORE_HTTP_PORTS=8080
            - ASPNETCORE_ENVIRONMENT=Development
            - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=carsdb;Username=postgres;Password=postgres
        ports:
            - "8080:8080"
        depends_on:
            db:
                condition: service_healthy
        command: sh -c "dotnet tool restore && dotnet watch run --project CarsApi"


    api-prod:
        build:
            context: ./CarsApi
        container_name: api-prod
        depends_on:
            db:
                condition: service_healthy
            coverage:
                condition: service_completed_successfully
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_HTTP_PORTS=8080
            - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=carsdb;Username=postgres;Password=postgres
        ports:
            - "8080:8080"